{"version":3,"sources":["components/SaveBtn/index.js","components/Jumbotron/index.js","utils/API.js","components/Grid/index.js","components/List/index.js","components/Form/index.js","pages/Search.js","components/DeleteBtn/index.js","pages/Saved.js","components/Header.js","App.js","registerServiceWorker.js","index.js"],"names":["SaveBtn","props","Button","className","role","tabIndex","Jumbotron","children","style","height","clear","paddingTop","textAlign","title","console","log","axios","get","_id","delete","book","post","Container","fluid","Row","List","ListItem","Input","FormBtn","float","marginBottom","Search","useState","books","setBooks","formObject","setFormObject","onChange","event","target","name","value","placeholder","disabled","onClick","preventDefault","API","then","res","data","items","search","forEach","item","push","uuid","id","volumeInfo","authors","description","searchInfo","testSnippet","image","imageLinks","thumbnail","link","infoLink","catch","err","length","map","key","newbook","find","saveBook","DeleteBtn","Saved","loadBooks","useEffect","href","Header","Navbar","bg","expand","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","App","StrictMode","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.13ef51fd.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nimport Button from 'react-bootstrap/Button'\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction SaveBtn(props) {\n  return (\n    <Button className=\"save-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      save!\n    </Button>\n  );\n}\n\nexport default SaveBtn;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  searchBooks: function(title) {\n    console.log(\"in getBooks, title is:\", title)\n    return axios.get(`https://www.googleapis.com/books/v1/volumes?q=title:${title}`);\n  },\n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books/\");\n  },\n  // Deletes the book with the given id\n  deleteBook: function(_id) {\n    return axios.delete(\"/api/books/\" + _id);\n  },\n  // Saves a book to the database\n  saveBook: function(book) {\n    return axios.post(\"/api/books\", book);\n  }\n};\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport SaveBtn from \"../components/SaveBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction Search() {\n// Setting our component's initial state\nconst [books, setBooks] = useState([])\nconst [formObject, setFormObject] = useState({})\n\n// Load all books and store them with setBooks\n// useEffect(() => {\n//   loadBooks()\n// }, [formObject.title])\n\n// searches all books and sets them to books\nfunction loadBooks(title) {\n  // API.getBooks(title)\n  //   .then(res => {\n  //     console.log(\"Books searched from google\", res);\n  //     setBooks(res.data) \n  //   }\n\n  //   )\n  //   .catch(err => console.log(err));\n};\n\n// Saves a book from the google list with a given id, then reloads books from the db\nfunction saveBook(uuid) {\n\n    let newbook = books.find(book => book.uuid === uuid);\n    console.log(\"saving book\", newbook);\n    API.saveBook(newbook)\n      // .then(res => loadBooks())\n      .catch(err => console.log(err));\n  }\n\n// Handles updating component state when the user types into the input field\nfunction handleInputChange(event) {\n  const { name, value } = event.target;\n  setFormObject({...formObject, [name]: value})\n};\n\n// When the form is submitted, use the API.saveBook method to save the book data\n// Then reload books from the database\nfunction handleFormSubmit(event) {\n  event.preventDefault();\n  if (formObject.title) {\n    API.searchBooks(formObject.title)\n      .then(res => {\n        console.log(\"search:\", res.data.items)\n        let search = [];\n        res.data.items.forEach(item => {\n          search.push({\n            uuid: item.id,\n            title: item.volumeInfo.title,\n            authors: item.volumeInfo.authors,\n            description: item.searchInfo.testSnippet,\n            image: item.volumeInfo.imageLinks.thumbnail,\n            link: item.volumeInfo.infoLink\n          })\n        });\n        setBooks(search)\n      })\n      .catch(err => console.log(err));\n  }\n};\n\n  return (\n    <Container fluid>\n      <Row>\n          <Jumbotron>\n            <h1>Search Google Books!</h1>\n            <h4>Seach for and Save Books of Interest</h4>\n          </Jumbotron>\n          <form>\n            <Input\n              onChange={handleInputChange}\n              name=\"title\"\n              placeholder=\"Title (required)\"\n            />\n            <FormBtn\n              disabled={!formObject.title}\n              onClick={handleFormSubmit}\n            >\n              Search for Books!\n            </FormBtn>\n            {books.length ? (\n            <List>\n                {books.map(book => (\n                <ListItem key={book.uuid}>\n                    <strong>\n                        {book.title} by {book.authors}\n                    </strong>\n                    <SaveBtn onClick={() => saveBook(book.uuid)} />\n              \n                </ListItem>\n                ))}\n            </List>\n            ) : (\n            <h3>No Results to Display</h3>\n            )}\n          </form>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      ✗\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\n\nfunction Saved() {\n    // Setting our component's initial state\n    const [books, setBooks] = useState([])\n    // const [formObject, setFormObject] = useState({})\n\n    // Load all books and store them with setBooks\n    useEffect(() => {\n    loadBooks()\n    }, [])\n\n    // Loads all books and sets them to books\n    function loadBooks() {\n    API.getBooks()\n        .then(res => {\n          console.log(\"from load books res: \". res)\n          setBooks(res.data)\n        }\n\n        )\n        .catch(err => console.log(err));\n    };\n\n    // Deletes a book from the database with a given id, then reloads books from the db\n    function deleteBook(_id) {\n    API.deleteBook(_id)\n        .then(res => loadBooks())\n        .catch(err => console.log(err));\n    }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Jumbotron>\n        <h1>My Saved Books</h1>\n        </Jumbotron>\n        {books.length ? (\n        <List>\n            {books.map(book => (\n            <ListItem key={book._id}>\n                <a target=\"_blank\" href={book.link}>\n                  <strong>\n                      {book.title} by {book.authors}\n                  </strong>\n                </a>\n              <DeleteBtn onClick={() => deleteBook(book._id)} />\n            </ListItem>\n            ))}\n        </List>\n        ) : (\n        <h3>No Results to Display</h3>\n        )}\n      </Row>\n    </Container>\n  );\n}\n\nexport default Saved;\n","import React from 'react';\nimport {Navbar, Nav} from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\n\nconst Header = () => {\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <LinkContainer to=\"/\">\n        <Navbar.Brand>Google Book Search</Navbar.Brand>\n        </LinkContainer>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <LinkContainer to=\"/search\">\n                    <   Nav.Link>Search</Nav.Link>\n                    </LinkContainer>\n                    <LinkContainer to=\"/saved\">\n                        <Nav.Link>Saved</Nav.Link>\n                    </LinkContainer>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n            )\n}\n\nexport default Header","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Search from './pages/Search';\nimport Saved from './pages/Saved';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <React.StrictMode>\n      <Router>\n          <Header/>\n          <Switch>\n              <Route exact path=\"/\" component={Search} />\n              <Route path=\"/search\" component={Search} />\n              <Route path=\"/saved\" component={Saved} />\n          </Switch>\n      </Router>\n    </React.StrictMode>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}